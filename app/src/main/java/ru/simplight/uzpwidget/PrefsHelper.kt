package ru.simplight.uzpwidget

import android.appwidget.AppWidgetManager
import android.content.ComponentName
import android.content.Context
import android.content.SharedPreferences
import android.util.Log

/**
 * –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–π –æ–±—ä–µ–∫—Ç –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∏ –∑–∞–≥—Ä—É–∑–∫–∏ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –≤–∏–¥–∂–µ—Ç–∞
 * (—Ä–∞–±–æ—Ç–∞–µ—Ç —á–µ—Ä–µ–∑ SharedPreferences)
 */
object PrefsHelper {

    private const val PREFS_NAME = "UZPWidgetPrefs"

    /** –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —ç–∫–∑–µ–º–ø–ª—è—Ä SharedPreferences */
    private fun prefs(context: Context): SharedPreferences =
        context.getSharedPreferences(PREFS_NAME, Context.MODE_PRIVATE)

    // -------------------------------------------------------------
    //  –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ / –ø–æ–ª—É—á–µ–Ω–∏–µ –∑–Ω–∞—á–µ–Ω–∏–π
    // -------------------------------------------------------------

    fun putString(context: Context, key: String, value: String) {
        prefs(context).edit().putString(key, value).apply()
    }

    fun getString(context: Context, key: String, defaultValue: String = ""): String {
        return prefs(context).getString(key, defaultValue) ?: defaultValue
    }

    fun putInt(context: Context, key: String, value: Int) {
        prefs(context).edit().putInt(key, value).apply()
    }

    fun getInt(context: Context, key: String, defaultValue: Int = 0): Int {
        return prefs(context).getInt(key, defaultValue)
    }

    // -------------------------------------------------------------
    //  –û—á–∏—Å—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö
    // -------------------------------------------------------------

    /** –û—á–∏—Å—Ç–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –≤–∏–¥–∂–µ—Ç–∞ */
    fun clearForWidget(context: Context, widgetId: Int) {
        val editor = prefs(context).edit()
        editor.remove("baseUrl_$widgetId")
        editor.remove("login_$widgetId")
        editor.remove("password_$widgetId")
        editor.remove("tag1_$widgetId")
        editor.remove("tag2_$widgetId")
        editor.remove("tag3_$widgetId")
        editor.remove("transparency_$widgetId")
        editor.remove("textSize_$widgetId")
        editor.apply()

        Log.d("PrefsHelper", "üßπ –û—á–∏—â–µ–Ω—ã –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è –≤–∏–¥–∂–µ—Ç–∞ #$widgetId")
    }

    /** –ü–æ–ª–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ –≤—Å–µ—Ö —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è */
    fun clearAll(context: Context) {
        prefs(context).edit().clear().apply()
        Log.d("PrefsHelper", "üßπ –í—Å–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–±—Ä–æ—à–µ–Ω—ã")
    }

    // -------------------------------------------------------------
    //  –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –æ—á–∏—Å—Ç–∫–∞ —É—Å—Ç–∞—Ä–µ–≤—à–∏—Ö –∑–∞–ø–∏—Å–µ–π
    // -------------------------------------------------------------

    /**
     * –£–¥–∞–ª—è–µ—Ç –∑–∞–ø–∏—Å–∏ –¥–ª—è –≤–∏–¥–∂–µ—Ç–æ–≤, –∫–æ—Ç–æ—Ä—ã—Ö –±–æ–ª—å—à–µ –Ω–µ—Ç –Ω–∞ —Ä–∞–±–æ—á–µ–º —Å—Ç–æ–ª–µ.
     */
    fun autoCleanup(context: Context) {
        try {
            val appWidgetManager = AppWidgetManager.getInstance(context)
            val allWidgets = appWidgetManager.getAppWidgetIds(
                ComponentName(context, MySimpLightWidget::class.java)
            )

            val validIds = allWidgets.toSet()
            val editor = prefs(context).edit()
            val keys = prefs(context).all.keys

            keys.forEach { key ->
                val idPart = key.substringAfterLast("_", "")
                val idValue = idPart.toIntOrNull()

                // –ï—Å–ª–∏ ID –µ—Å—Ç—å –∏ –æ–Ω –Ω–µ –≤—Ö–æ–¥–∏—Ç –≤ —Å–ø–∏—Å–æ–∫ –∞–∫—Ç–∏–≤–Ω—ã—Ö ‚Äî —É–¥–∞–ª–∏—Ç—å
                if (idValue != null && idValue !in validIds) {
                    editor.remove(key)
                    Log.d("PrefsHelper", "üßΩ –£–¥–∞–ª–µ–Ω—ã —Å—Ç–∞—Ä—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –≤–∏–¥–∂–µ—Ç–∞ #$idValue")
                }
            }

            editor.apply()
        } catch (e: Exception) {
            Log.e("PrefsHelper", "–û—à–∏–±–∫–∞ –ø—Ä–∏ –∞–≤—Ç–æ–æ—á–∏—Å—Ç–∫–µ: ${e.message}")
        }
    }
}
